{
  "repo_full_name": "bitcoin/bitcoin",
  "license": "MIT License",
  "open_issues_count": 952,
  "forks": 32508,
  "stars": 64543,
  "watchers": 64543,
  "topics": [
    "bitcoin",
    "c-plus-plus",
    "cryptocurrency",
    "cryptography",
    "p2p"
  ],
  "pushed_at": "2022-06-08T12:04:48Z",
  "organization": "bitcoin",
  "contributors": [
    {
      "username": "laanwj",
      "contributions": 7318
    },
    {
      "username": "MarcoFalke",
      "contributions": 5182
    },
    {
      "username": "fanquake",
      "contributions": 2056
    },
    {
      "username": "sipa",
      "contributions": 2012
    },
    {
      "username": "hebasto",
      "contributions": 1123
    },
    {
      "username": "gavinandresen",
      "contributions": 1101
    },
    {
      "username": "jnewbery",
      "contributions": 788
    },
    {
      "username": "jonasschnelli",
      "contributions": 772
    },
    {
      "username": "achow101",
      "contributions": 744
    },
    {
      "username": "practicalswift",
      "contributions": 715
    },
    {
      "username": "theuni",
      "contributions": 607
    },
    {
      "username": "jonatack",
      "contributions": 578
    },
    {
      "username": "TheBlueMatt",
      "contributions": 504
    },
    {
      "username": "luke-jr",
      "contributions": 471
    },
    {
      "username": "dongcarl",
      "contributions": 458
    },
    {
      "username": "ryanofsky",
      "contributions": 456
    },
    {
      "username": "promag",
      "contributions": 334
    },
    {
      "username": "meshcollider",
      "contributions": 317
    },
    {
      "username": "theStack",
      "contributions": 309
    },
    {
      "username": "sdaftuar",
      "contributions": 294
    },
    {
      "username": "non-github-bitcoin",
      "contributions": 271
    },
    {
      "username": "gmaxwell",
      "contributions": 267
    },
    {
      "username": "morcos",
      "contributions": 209
    },
    {
      "username": "ajtowns",
      "contributions": 191
    },
    {
      "username": "Sjors",
      "contributions": 184
    },
    {
      "username": "vasild",
      "contributions": 182
    },
    {
      "username": "glozow",
      "contributions": 181
    },
    {
      "username": "jtimon",
      "contributions": 173
    },
    {
      "username": "kallewoof",
      "contributions": 163
    },
    {
      "username": "instagibbs",
      "contributions": 152
    }
  ],
  "contributors_count": 30,
  "commits": [
    {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2022-06-08T10:19:28Z"
      },
      "message": "Merge bitcoin/bitcoin#25096: [net] Minor improvements to addr caching\n\n292828cd7744ec7eadede4ad54aa2117087c5435 [test] Test addr cache for multiple onion binds (dergoegge)\n3382905befd23364989d941038bf7b1530fea0dc [net] Seed addr cache randomizer with port from binding address (dergoegge)\nf10e80b6e4fbc151abbf1c20fbdcc3581d3688f0 [net] Use ConnectedThroughNetwork() instead of GetNetwork() to seed addr cache randomizer (dergoegge)\n\nPull request description:\n\n  The addr cache id randomizer is currently supposed to be seeded with the network of the inbound connection and the local socket (only the address is used not the port):  https://github.com/bitcoin/bitcoin/blob/a8098f2cef53ec003edae91100afce564e9c6f23/src/net.cpp#L2800-L2804\n\n  For inbound onion connections `CNode::addr.GetNetwork()` returns `NET_UNROUTABLE` and `CNode::addrBind` is set to `127.0.0.1:<onion bind port>`. This results in the same addr cache for all inbound connections on 127.0.0.1 binds.\n\n  To avoid the same addr cache across all onion and other 127.0.0.1 binds, we should seed the addr cache randomizer with the correct network for inbound onion connections (using `CNode::ConnectedThroughNetwork()`) as well as the port of `CNode::addrBind`.\n\nACKs for top commit:\n  sipa:\n    utACK 292828cd7744ec7eadede4ad54aa2117087c5435\n  mzumsande:\n    Code Review ACK 292828cd7744ec7eadede4ad54aa2117087c5435\n  naumenkogs:\n    utACK 292828cd7744ec7eadede4ad54aa2117087c5435\n\nTree-SHA512: d0be13bab6bc121c2926d4b168687f6c2ed4ce0c9dd19be71eb4886adeba8afc3daacdc4e232a0ba3b03a89d69b618abc5595b69abd1ad0c476d825bc6ea1f9f",
      "pushed_at": "2022-06-08T10:21:38Z"
    },
    {
      "author": {
        "name": "MacroFake",
        "email": "falke.marco@gmail.com",
        "date": "2022-06-08T05:51:58Z"
      },
      "message": "Merge bitcoin/bitcoin#25298: doc: Fix command in \"OpenBSD Build Guide\"\n\nb1f662b859ff4e8f28ede49a0ab2589920de9726 doc: Fix command in \"OpenBSD Build Guide\" (Hennadii Stepanov)\n\nPull request description:\n\n  Fixed `pkg_add sqlite3` command.\n\nACKs for top commit:\n  theStack:\n    ACK b1f662b859ff4e8f28ede49a0ab2589920de9726\n\nTree-SHA512: b1dd1baa238f76dadfb188b46bc72f993cc88ea4651cf0836cd85348429baa15228e9cd4c15e588675c9f340692118952302a8629f45d7dc275cc086917c11ca",
      "pushed_at": "2022-06-08T05:52:00Z"
    },
    {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2022-06-07T21:04:20Z"
      },
      "message": "doc: Fix command in \"OpenBSD Build Guide\"",
      "pushed_at": "2022-06-07T21:04:20Z"
    },
    {
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2022-06-07T19:17:06Z"
      },
      "message": "Merge bitcoin/bitcoin#25292: Add LogPrintLevel to lint-format-strings, drop LogPrint-vs-LogPrintf section in dev notes\n\n433b52569417674f84c2b1d449037701814420c4 Add LogPrintLevel to lint-format-strings, drop LogPrint-vs-LogPrintf section in dev notes (Jon Atack)\n\nPull request description:\n\n  added by #7003 in 2015, as that potential issue would now be caught by the `test/lint/lint-format-strings.py` script run by the CI.\n\nACKs for top commit:\n  MarcoFalke:\n    cr ACK 433b52569417674f84c2b1d449037701814420c4\n  w0xlt:\n    ACK https://github.com/bitcoin/bitcoin/pull/25292/commits/433b52569417674f84c2b1d449037701814420c4\n\nTree-SHA512: 91a2ac76689ed4f1f638e07c16d2ec8952fb013cc8bb896780fbd9333abd084281ce99afdc9de715d07a9abb4dce5dd67edf5e347aff466c6ef339ccc4158679",
      "pushed_at": "2022-06-07T19:17:45Z"
    },
    {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2022-06-07T18:57:17Z"
      },
      "message": "Merge bitcoin/bitcoin#25239: wallet: 'CommitTransaction', remove extra wtx lookup and add exception for db write error\n\n57fb37c27599fc865f20b42a27bb9c227f384de3 wallet: CommitTransaction, remove extra wtx lookup and add exception for a possible db write error. (furszy)\n\nPull request description:\n\n  Two points for `CWallet::CommitTransaction`:\n\n  1) The extra wtx lookup:\n      As we are calling to `AddToWallet` first, which returns the recently added/updated wtx pointer, there is no need to look up the wtx again few lines later. We can just use it.\n\n  2) The db write error:\n      `AddToWallet` can only return a nullptr if the db write fails, which inside `CommitTransaction` translates to an exception throw cause. We expect everywhere that `CommitTransaction` always succeed.\n\n  ------------------------------------------------\n\n  Extra note:\n  This finding generated another working path for me :)\n   It starts with the following question: why are we returning a nullptr from `AddToWallet` if the db write failed without removing the recently added transaction from the wallet's map?..\n   Can led to a wallet invalid state where the inputs of this new transaction are not marked dirty, while the transaction that spends them still exist on the in-memory wallet tx map.\n  -- I'm writing it here to gather some feedback first and not forget it, will create a follow-up PR in the coming days \ud83d\ude9c --\n\nACKs for top commit:\n  achow101:\n    ACK 57fb37c27599fc865f20b42a27bb9c227f384de3\n  jonatack:\n    ACK 57fb37c\n  ryanofsky:\n    Code review ACK 57fb37c27599fc865f20b42a27bb9c227f384de3. Seems like a clear improvement. Better to fail earlier with a better error message if the failure is going to happen anyway\n\nTree-SHA512: 80e59c01852cfbbc70a5de1a1c2c59b5e572f9eaa08c2175112cb515256e63fa04c7942f92a513b620d6b06e66392029ebe8902287c456efdbee58a7a5ae42da",
      "pushed_at": "2022-06-07T19:02:53Z"
    },
    {
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2022-06-07T18:26:27Z"
      },
      "message": "Merge bitcoin/bitcoin#25228: test: add BIP-125 rule 5 testcase with default mempool\n\n687addaf136356e0f3698d6345c92d875e0a3362 test: add BIP-125 rule 5 testcase with default mempool (James O'Beirne)\n6120e8e2871fecfec5ab3099c97e13951e062a4d test: allow passing sequence through create_self_transfer_multi (James O'Beirne)\n\nPull request description:\n\n  Currently, we only test rule 5 of BIP-125 (replacement transactions cannot evict more than 100 transactions) by changing default mempool parameters to allow for more descendants. The current test works on a single transaction graph that has over 100 descendants.\n\n  This patch adds a test to exercise rule 5 using the default mempool parameters. The case is a little more sophisticated: instead of working on a single transaction graph, it uses a replacement transaction to \"unite\" several UTXOs which join independent transaction graphs. The total number of transactions in these graphs sum to more than the max allowable replacement.\n\n  I think the difference in transaction topology makes this a worthwhile testcase to have, setting aside the fact that this testcase works without having to use atypical mempool params.\n\n  See also: [relevant discussion from IRC](https://www.erisian.com.au/bitcoin-core-dev/log-2022-05-27.html#l-126)\n\nACKs for top commit:\n  laanwj:\n    Code review ACK 687addaf136356e0f3698d6345c92d875e0a3362\n  LarryRuane:\n    ACK 687addaf136356e0f3698d6345c92d875e0a3362\n\nTree-SHA512: e589aeaf9d6f137d546b7809f8795d6f6043d87b15e97c2efe85b42ce8b49d977ee7d79440c542ca4b0b5ca2de527488029841a1ffc0d96c5771897df4b3f324",
      "pushed_at": "2022-06-07T18:49:33Z"
    },
    {
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2022-06-07T17:21:28Z"
      },
      "message": "Merge bitcoin/bitcoin#25245: refactor: Remove no-op TIME_INIT on deser\n\nfa243e93138d899f41be02af3fa2b029dd8d525e Remove no-op TIME_INIT on deser (MarcoFalke)\n\nPull request description:\n\n  Split out from https://github.com/bitcoin/bitcoin/pull/24697\n\nACKs for top commit:\n  laanwj:\n    ACK fa243e93138d899f41be02af3fa2b029dd8d525e\n  fanquake:\n    ACK fa243e93138d899f41be02af3fa2b029dd8d525e\n\nTree-SHA512: 3b92578a291279d04ac1b274807a6e4ee7a342e3527cc03d90223a1dbc4961668ddb572e40aff85171600a5a3cb2572188c0d75f757a3db8a441c1103eb66e84",
      "pushed_at": "2022-06-07T17:42:13Z"
    },
    {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2022-06-07T13:39:29Z"
      },
      "message": "Add LogPrintLevel to lint-format-strings, drop LogPrint-vs-LogPrintf section in dev notes\n\nthat was added in 2015 by commit b8c06ef40 in PR 7003, as that potential issue\nwould now be caught by the test/lint/lint-format-strings.py script run by the CI",
      "pushed_at": "2022-06-07T13:56:26Z"
    },
    {
      "author": {
        "name": "MacroFake",
        "email": "falke.marco@gmail.com",
        "date": "2022-06-07T09:33:52Z"
      },
      "message": "Merge bitcoin/bitcoin#25286: scripted-diff: remove duplicate categories from LogPrint output\n\nd40550d725fa7afd6916510164bbaa95e3ec0a5f scripted-diff: remove duplicate categories from LogPrint output (Jon Atack)\n\nPull request description:\n\n  This is the first commit from #25203.\n\n  - Scripted-diff: de-duplicate logging category output for the tor, i2p, net, zmq, and prune messages (e.g. where I found duplicates), as these category prefixes are now printed automatically since #24464\n\n  examples before\n  ```\n  [tor] tor: Successfully connected!\n  [i2p] I2P: Creating SAM session with 127.0.0.1:7656\n  [zmq] zmq: Initialize notification interface\n  [net] net: enabling extra block-relay-only peers\n  ```\n  after\n  ```\n  [tor] Successfully connected!\n  [i2p] Creating SAM session with 127.0.0.1:7656\n  [zmq] Initialize notification interface\n  [net] enabling extra block-relay-only peers\n  ```\n\nACKs for top commit:\n  klementtan:\n    crACK d40550d725fa7afd6916510164bbaa95e3ec0a5f\n  MarcoFalke:\n    cr ACK d40550d725fa7afd6916510164bbaa95e3ec0a5f\n\nTree-SHA512: 63b799f2f899f0597981dd1acb91ef4439cd00b257a9eb19d67c4ce2c4dc72a95ac5761cb78f2a19090a10be74f23ea1db6929ed942ba0d008b4be563f0d5e7e",
      "pushed_at": "2022-06-07T09:33:58Z"
    },
    {
      "author": {
        "name": "MacroFake",
        "email": "falke.marco@gmail.com",
        "date": "2022-06-07T09:31:02Z"
      },
      "message": "Merge bitcoin/bitcoin#25254: Move minRelayTxFee to policy/settings\n\nfa4068b4e2192f168bb120624eca5735f0dadf6f Move minRelayTxFee to policy/settings (MacroFake)\n\nPull request description:\n\n  Seems a bit confusing to put policy stuff into validation, so fix that.\n\n  Also fix includes via `iwyu`.\n\nACKs for top commit:\n  ariard:\n    ACK fa4068b, the includes move compiles well locally.\n  ryanofsky:\n    Code review ACK fa4068b4e2192f168bb120624eca5735f0dadf6f. Make sense to move the global variable to policy/settings and the default constant to policy/policy. Ariard points out other constants that could be moved, which seems fine, but it seems like moving the global variable to be with other related global variables is more significant.\n\nTree-SHA512: adf9619002610d1877f3aef0a9e6115fc4c2ad64135a3e5100824c650b560c47f47ac28894c6214a50a7888355252a9f6f7cec98c23a771a1964160ef1ca77de",
      "pushed_at": "2022-06-07T09:31:10Z"
    },
    {
      "author": {
        "name": "MacroFake",
        "email": "falke.marco@gmail.com",
        "date": "2022-06-07T08:37:29Z"
      },
      "message": "Merge bitcoin/bitcoin#25288: test: Reliably don't start itself (lint-all.py runs all tests twice)\n\nf26a496dfd0a7ce3833a10075027d7d5b0345e32 test: clean up all-lint.py (Martin Leitner-Ankerl)\n64d72c4c8734b9dd45cb61cb2c2baf98766b0163 test: rename lint-all.py to all-lint.py (Martin Leitner-Ankerl)\n\nPull request description:\n\n  When running `./test/lint/lint-all.py`, the script runs all tests but\n  also calls itself because the comparison with `__file__` doesn't work.\n\n  Comparing resolved paths gives reliable comparison, and lint-all.py doesn't call itself any more\n\nACKs for top commit:\n  laanwj:\n    Code review ACK f26a496dfd0a7ce3833a10075027d7d5b0345e32\n\nTree-SHA512: b44abdd685f7b48a6a9f48e96d97138b635c31c1c7ab543cb5636b5f49690ccd56fa6fec01ae7fcc16af01a613372ee77632f70c32059919b373aa8051953791",
      "pushed_at": "2022-06-07T08:37:34Z"
    },
    {
      "author": {
        "name": "Martin Leitner-Ankerl",
        "email": "martin.leitner-ankerl@dynatrace.com",
        "date": "2022-06-07T08:24:55Z"
      },
      "message": "test: clean up all-lint.py\n\nRemoved th check against __file__ which is not necessary any more after the rename to all-lint.py.\n\nChanged glob to find only `lint-*.py` scripts.",
      "pushed_at": "2022-06-07T08:24:55Z"
    },
    {
      "author": {
        "name": "Martin Leitner-Ankerl",
        "email": "martin.leitner-ankerl@dynatrace.com",
        "date": "2022-06-07T08:22:45Z"
      },
      "message": "test: rename lint-all.py to all-lint.py\n\nThat way it is impossible for the script to call itself.",
      "pushed_at": "2022-06-07T08:22:45Z"
    },
    {
      "author": {
        "name": "MacroFake",
        "email": "falke.marco@gmail.com",
        "date": "2022-06-07T06:04:45Z"
      },
      "message": "Merge bitcoin/bitcoin#24629: Bugfix: RPC/blockchain: pruneblockchain: Return the height of the actual last pruned block\n\ne593ae07c4fb41a26c95dbd03301607fc5b4d5e2 Bugfix: RPC/blockchain: pruneblockchain: Return the height of the actual last pruned block (Luke Dashjr)\n\nPull request description:\n\n  From 0.14 (2017 Mar) until before 0.19 (2019 Nov), the height of the last block pruned was returned, subject to a bug if there were blocks left unpruned due to sharing files with later blocks.\n\n  In #15991, this was \"fixed\" to the current implementation, introducing a new bug: now, it returns the first *unpruned* block.\n\n  Since the user provides the parameter as a block to include in pruning, it makes more sense to fix the behaviour to match the documentation.\n\n  ~~(Additionally, the description of \"pruneheight\" in getblockchaininfo is fixed to be technically correct)~~\n\nACKs for top commit:\n  fjahr:\n    utACK e593ae07c4fb41a26c95dbd03301607fc5b4d5e2\n  ryanofsky:\n    Code review ACK e593ae07c4fb41a26c95dbd03301607fc5b4d5e2. Just rebased since last review. Maybe some of the original reviewers of #15991 will want to take a look at this to correct the mistake that was introduced there!\n\nTree-SHA512: c2d511df80682d57260aae8af1665f9d7eaed16448f185f4c9f23c78fa9b8289a02053da7a0b83643fef57610d601ea63b59ff39661a51f4827f1eb27cc30594",
      "pushed_at": "2022-06-07T06:04:51Z"
    },
    {
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2022-06-06T15:10:17Z"
      },
      "message": "Merge bitcoin/bitcoin#25220: rpc: fix incorrect warning for address type p2sh-segwit in createmultisig\n\n3a9b9bb38e653c8ff7220b9af6e337a90c2c22dc test: ensure createmultisig and addmultisigaddress are not returning any warning for expected cases (brunoerg)\neaf6f630c0190c634b5f1c85f749437f4209cc36 rpc: fix inappropriate warning for address type p2sh-segwit in createmultisig and addmultisigaddress (brunoerg)\n\nPull request description:\n\n  Fixes #25127\n\n  If there are any uncompressed keys when calling `AddAndGetMultisigDestination`, it will just default to a legacy address regardless of the chosen `address_type`. So, #23113 added a warnings field which will warn the user why their address format is different.\n\n  However, when creating a multisig (p2sh-segwit), it is returning an inappropriate warning, because when getting the output type from destination (`OutputTypeFromDestination`), it returns `ScriptHash` for both legacy and `P2SH_SEGWIT`. So, since `P2SH_SEGWIT` is different from `ScriptHash`, it returns the warning:\n  https://github.com/bitcoin/bitcoin/blob/192d639a6b1bd0feaa52e6ea4e63e33982704c32/src/rpc/output_script.cpp#L166-L169\n\n  So, to avoid this mistake I changed `OutputTypeFromDestination` to `descriptor->GetOutputType()` to get the appropriate output type.\n\nACKs for top commit:\n  jonatack:\n    ACK 3a9b9bb38e653c8ff7220b9af6e337a90c2c22dc\n  laanwj:\n    Code review ACK 3a9b9bb38e653c8ff7220b9af6e337a90c2c22dc\n\nTree-SHA512: 49f717479c2b8906277e7591ddd4747f7961c2d5c77494b5124045de9036a4277d46b9ad99279d51f0c4484284c445f1e1d3c55c49bbf0716741bad426a89369",
      "pushed_at": "2022-06-06T15:13:22Z"
    },
    {
      "author": {
        "name": "MacroFake",
        "email": "falke.marco@gmail.com",
        "date": "2022-06-06T13:54:28Z"
      },
      "message": "Merge bitcoin/bitcoin#25276: doc: Fix typo in importdescriptors\n\n210cd592cd67e05434c87d6f95e2d8d5b7abc800 doc: Fix typo in importdescriptors (Kolby Moroz Liebl)\n\nPull request description:\n\nACKs for top commit:\n  1440000bytes:\n    ACK https://github.com/bitcoin/bitcoin/pull/25276/commits/210cd592cd67e05434c87d6f95e2d8d5b7abc800\n  LarryRuane:\n    ACK 210cd592cd67e05434c87d6f95e2d8d5b7abc800\n  brunoerg:\n    crACK 210cd592cd67e05434c87d6f95e2d8d5b7abc800\n\nTree-SHA512: 39ff9777b05abc1a68c8c3e646e00b0672838696c567c582d0492baa753863231447fd8439bd41cd8a8b8ba752299b032e839c8862c02faa2bdc207a9a7a8540",
      "pushed_at": "2022-06-06T13:54:30Z"
    },
    {
      "author": {
        "name": "MacroFake",
        "email": "falke.marco@gmail.com",
        "date": "2022-06-06T13:15:08Z"
      },
      "message": "Merge bitcoin/bitcoin#25255: ci: Improve \"ARM64 Android APK\" task\n\nc47944f4e93204e13686280da86efffee4ba6eb2 ci: Reuse some configure options in \"ARM64 Android APK\" task (Hennadii Stepanov)\n7739438811adef67766aa845122633ff7f594e35 ci, android: Update NDK up to r23c (Hennadii Stepanov)\nca0c3e50779771832dd8db419940fde877d9b691 ci, android: Update Command-line Tools from 2.1 up to 7.0 (Hennadii Stepanov)\n8790da3c1e9006ca9c1937595cb0f55889c1c026 ci: Drop unneeded packages in \"ARM64 Android APK\" task (Hennadii Stepanov)\n\nPull request description:\n\n  This PR improves the \"ARM64 Android APK\" CI task in the following ways:\n  - dropped packages that are not required to be installed\n  - updated Android Command-line Tools and Android NDK to make the CI environment closer to the default one, which is provided by Android Studio\n\nACKs for top commit:\n  icota:\n    utACK c47944f4e93204e13686280da86efffee4ba6eb2\n\nTree-SHA512: 45f5aba41007a502ae90333272370fd559c48a27d573896c449b3e436c5cf2b6440408381e4d20eb53104426ade26d3a9014c09dcdf3257ec897a537095efa4f",
      "pushed_at": "2022-06-06T13:15:21Z"
    },
    {
      "author": {
        "name": "brunoerg",
        "email": "brunoely.gc@gmail.com",
        "date": "2022-05-25T18:17:12Z"
      },
      "message": "test: ensure createmultisig and addmultisigaddress are not returning any warning for expected cases",
      "pushed_at": "2022-06-06T12:46:42Z"
    },
    {
      "author": {
        "name": "brunoerg",
        "email": "brunoely.gc@gmail.com",
        "date": "2022-05-25T18:16:22Z"
      },
      "message": "rpc: fix inappropriate warning for address type p2sh-segwit in createmultisig and addmultisigaddress",
      "pushed_at": "2022-06-06T12:46:02Z"
    },
    {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2022-05-24T19:16:39Z"
      },
      "message": "scripted-diff: remove duplicate categories from LogPrint output\n\n-BEGIN VERIFY SCRIPT-\ns() { git grep -l \"$1\" src | xargs sed -i \"s/$1/$2/g\"; }\ns 'BCLog::TOR, \"tor: '       'BCLog::TOR, \"'\ns 'BCLog::I2P, \"I2P: '       'BCLog::I2P, \"'\ns 'BCLog::NET, \"net: '       'BCLog::NET, \"'\ns 'BCLog::ZMQ, \"zmq: '       'BCLog::ZMQ, \"'\ns 'BCLog::PRUNE, \"Prune: '   'BCLog::PRUNE, \"'\n-END VERIFY SCRIPT-",
      "pushed_at": "2022-06-06T10:12:03Z"
    },
    {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2022-06-05T12:13:13Z"
      },
      "message": "Merge bitcoin-core/gui#614: Drop no longer supported Android architecture\n\nd1b7bcbca2be4eae3bf7572a8343a3bd69ce61a9 qt: Drop no longer supported Android architecture (Hennadii Stepanov)\n\nPull request description:\n\n  The `i686-linux-android` arch support has been dropped since bitcoin/bitcoin#23744.\n\nACKs for top commit:\n  katesalazar:\n    ACK d1b7bcbca2be4eae3bf7572a8343a3bd69ce61a9\n  icota:\n    utACK https://github.com/bitcoin-core/gui/pull/614/commits/d1b7bcbca2be4eae3bf7572a8343a3bd69ce61a9\n  prusnak:\n    Approach ACK d1b7bcbca2be4eae3bf7572a8343a3bd69ce61a9\n\nTree-SHA512: 13689ec8c63c92b9a52a3c25edc35536b8e51ff583f57c45b168515f928d020d6bb85d03db9efd8d5efd57b944dfd313a89f5ff8a52f99982ccc8d9671f6e7a9",
      "pushed_at": "2022-06-05T12:29:29Z"
    },
    {
      "author": {
        "name": "Kolby Moroz Liebl",
        "email": "31669092+KolbyML@users.noreply.github.com",
        "date": "2022-06-05T00:48:30Z"
      },
      "message": "doc: Fix typo in importdescriptors",
      "pushed_at": "2022-06-05T00:48:30Z"
    },
    {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2022-06-04T19:52:10Z"
      },
      "message": "Merge bitcoin/bitcoin#24860: Miniscript integration follow-ups\n\nf3a50c9dfe645c548713e44e0eaf26ea9917a379 miniscript: rename IsSane and IsSaneSubexpression to prevent misuse (Antoine Poinsot)\nc5fe5163dc31db939c44129f2ff8283b290a9330 miniscript: nit: don't return after assert(false) (Antoine Poinsot)\n7bbaca9d8d355a17348a8d01e3e2521c5de466b0 miniscript: explicit the threshold size computation in multi() (Antoine Poinsot)\n8323e4249db50d46ae4f43c1d8a50666549ae938 miniscript: add an OpCode typedef for readability (Antoine Poinsot)\n7a549c6c59e6babbae76af008433426c6fa38fe2 miniscript: mark nodes with duplicate keys as insane (Antoine Poinsot)\n8c0f8bf7bc3750fad648af1a548517a272114bca fuzz: add a Miniscript target for string representation roundtripping (Antoine Poinsot)\nbe34d5077b2fede7404de7706362f5858c443525 fuzz: rename and improve the Miniscript Script roundtrip target (Antoine Poinsot)\n7eb70f0ac0a54adabc566e2b93bbf6b2beb54a79 miniscript: tiny doc fixups (Antoine Poinsot)\n5cea85f12cba5dcfe3a298eddfa711f582adffac miniscript: split ValidSatisfactions from IsSane (Antoine Poinsot)\na0f064dc1474a048e236bfff12f4def3aa11daf3 miniscript: introduce a CheckTimeLocksMix helper (Antoine Poinsot)\ned45ee3882e69266d550b56ff69388e071f0ad1b miniscript: use optional instead of bool/outarg (Antoine Poinsot)\n1ab8d89fd1bdb3c0f2a506b4a10df6c23ba21c48 miniscript: make equality operator non-recursive (Antoine Poinsot)\n5922c662c08a061b3b3d5ac34a31f9f9d4640d47 scripted-diff: miniscript: rename 'nodetype' variables to 'fragment' (Antoine Poinsot)\nc5f65db0f03b52bc4525acae944173829290ce6f miniscript: remove a workaround for a GCC 4.8 bug (Antoine Poinsot)\n\nPull request description:\n\n  The Miniscript repository and the Miniscript integration PR here have been a moving target for the past months, and some final cleanups were done there that were not included here. I initially intended to add some small followup commits to #24148 but i think there are enough of them to be worth a followup PR on its own.\n\n  Some parts of the code did not change since it was initially written in 2019, and the code could use some modernization. (Use std::optional instead of out args, remove old compiler workarounds).\n  We refactored the helpers to be more meaningful, and also did some renaming. A new fuzz target was also added and both were merged in a single file. 2 more will be added in #24149 that will be contained in this file too.\n\n  The only behaviour change in this PR is to rule out Miniscript with duplicate keys from sane Miniscripts. In a P2WSH context, signatures can be rebounded (Miniscript does not use CODESEPARATOR) and it's reasonable to assume that reusing keys across the Script drops the malleability guarantees.\n  It was previously assumed such Miniscript would never exist in the first place since a compiler should never create them. We finally agreed that if one were to exist (say, written by hand or from a buggy compiler) it would be very confusing if an imported Miniscript descriptor (after #24148) with duplicate keys was deemed sane (ie, \"safe to use\") by Bitcoin Core. We now check for duplicate keys in the constructor.\n\n  This is (still) joint work with Pieter Wuille. (Actually he entirely authored the cleanups and code modernization.)\n\nACKs for top commit:\n  sipa:\n    utACK f3a50c9dfe645c548713e44e0eaf26ea9917a379 (with the caveat that a lot of it is my own code)\n  sanket1729:\n    code review ACK f3a50c9dfe645c548713e44e0eaf26ea9917a379. Did not review the fuzz tests.\n\nTree-SHA512: c043325e4936fe25e8ece4266b46119e000c6745f88cea530fed1edf01c80f03ee6f9edc83b6e9d42ca01688d184bad16bfd967c5bb8037744e726993adf3deb",
      "pushed_at": "2022-06-04T19:54:20Z"
    },
    {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2022-06-04T19:22:40Z"
      },
      "message": "Merge bitcoin/bitcoin#25065: [kernel 2c/n] Introduce `kernel::Context`, encapsulate global init/teardown\n\nd87784ac87364fc977bbf9769c8bdb72dea8cbf9 kernel: SanityChecks: Return an error struct (Carl Dong)\n265d6393bf9ef52e7ef7de97ca9c031da82a5ad1 Move init::SanityCheck to kernel::SanityCheck (Carl Dong)\nfed085a1a4cd2787202752b6a0d98e42dce97f09 init: Initialize globals with kernel::Context's life (Carl Dong)\n7d03feef8156ef37a4efa01dc591467bc7d957bf kernel: Introduce empty and unused kernel::Context (Carl Dong)\neeb4fc20c578b1e428a92d64cc9f8f903a677580 test: Use Set/UnsetGlobals in BasicTestingSetup (Carl Dong)\n\nPull request description:\n\n  The full `init/common.cpp` is dependent on things like ArgsManager (which we wish to remove from libbitcoinkernel in the future) and sanity checks. These aren't necessary for libbitcoinkernel so we only extract the portion that is necessary (namely `init::{Set,Unset}Globals()`.\n\nACKs for top commit:\n  theuni:\n    ACK d87784ac87364fc977bbf9769c8bdb72dea8cbf9\n  vasild:\n    ACK d87784ac87364fc977bbf9769c8bdb72dea8cbf9\n\nTree-SHA512: cd6b4923ea1865001b5f0caed9a4ff99c198d22bf74154d935dc09a47fda22ebe585ec912398cea69f722454ed1dbb4898faab5a2d02fb4c5e719c5c8d71a3f9",
      "pushed_at": "2022-06-04T19:25:57Z"
    },
    {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2022-06-04T09:42:26Z"
      },
      "message": "qt: Drop no longer supported Android architecture",
      "pushed_at": "2022-06-04T09:42:26Z"
    },
    {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2022-03-21T18:38:54Z"
      },
      "message": "Bugfix: RPC/blockchain: pruneblockchain: Return the height of the actual last pruned block\n\nFrom 0.14 (2017 Mar) until before 0.19 (2019 Nov), the height of the last\nblock pruned was returned, subject to a bug if there were blocks left unpruned\ndue to sharing files with later blocks.\n\nIn #15991, this was \"fixed\" to the current implementation, introducing a new\nbug: now, it returns the first *unpruned* block.\n\nSince the user provides the parameter as a block to include in pruning, it\nmakes more sense to fix the behaviour to match the documentation.",
      "pushed_at": "2022-06-03T07:20:07Z"
    },
    {
      "author": {
        "name": "MacroFake",
        "email": "falke.marco@gmail.com",
        "date": "2022-06-03T06:46:40Z"
      },
      "message": "Merge bitcoin/bitcoin#25256: logging: fix logging empty thread name\n\n3a171f742c31addf5a343e8a6905054a1fbb12aa logging: fix logging empty threadname (klementtan)\n\nPull request description:\n\n  Currently, `leveldb` background thread does not have a thread name and as a result, an empty thread name is logged.\n\n  This PR fixes this by logging thread name as `\"unknown\"` if the thread name is empty\n\n  On master:\n  ```txt\n  2022-06-02T14:30:38Z [] [leveldb:debug] Generated table #281@0: 1862 keys, 138303 bytes\n  ```\n\n  On this PR:\n  ```txt\n  2022-06-02T14:30:38Z [unknown] [leveldb:debug] Generated table #281@0: 1862 keys, 138303 bytes\n  ```\n\nACKs for top commit:\n  laanwj:\n    Code review ACK 3a171f742c31addf5a343e8a6905054a1fbb12aa\n  hebasto:\n    ACK 3a171f742c31addf5a343e8a6905054a1fbb12aa\n\nTree-SHA512: 0af0fa5c4ddd3640c6dab9595fe9d97f74d0e0f4b41287a6630cf8ac5a21240250e0659ec4ac5a561e888d522f5304bf627104de2aba0fd0a86c1222de0897c2",
      "pushed_at": "2022-06-03T06:46:53Z"
    },
    {
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2022-06-02T20:22:05Z"
      },
      "message": "Merge bitcoin/bitcoin#24171: p2p: Sync chain more readily from inbound peers during IBD\n\n48262a00f58489d705314ee3c31136133040bb0e Add functional test for block sync from inbound peers (Suhas Daftuar)\n0569b5c4bbf8f725e3969d76f7cb081cdf1e4195 Sync chain more readily from inbound peers during IBD (Suhas Daftuar)\n\nPull request description:\n\n  When in IBD, if the honest chain is only known by inbound peers, then we must\n  eventually sync from them in order to learn it. This change allows us to\n  perform initial headers sync and fetch blocks from inbound peers, if we have no\n  blocks in flight.\n\n  The restriction on having no blocks in flight means that we will naturally\n  throttle our block downloads to any such inbound peers that we may be\n  downloading from, until we leave IBD. This is a tradeoff between preferring\n  outbound peers for most of our block download, versus making sure we always\n  eventually will get blocks we need that are only known by inbound peers even\n  during IBD, as otherwise we may be stuck in IBD indefinitely (which could have\n  cascading failure on the network, if a large fraction of the network managed to\n  get stuck in IBD).\n\n  Note that the test in the second commit fails on master, without the first commit.\n\nACKs for top commit:\n  ajtowns:\n    ACK 48262a00f58489d705314ee3c31136133040bb0e\n  sipa:\n    ACK 48262a00f58489d705314ee3c31136133040bb0e\n\nTree-SHA512: ffad3a05fa9a32a92226843c9128f52c275e8d51930fde7368badc340227f2ed680561c4c9f2937b4e3bd722474464849ec9b624f912f5e380ce98d71b55764d",
      "pushed_at": "2022-06-02T20:35:05Z"
    },
    {
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2022-06-02T18:42:59Z"
      },
      "message": "Merge bitcoin/bitcoin#25267: test: check `replaceable` mismatch error in `createrawtransaction` RPC\n\n1bace0cfeef35c4413769474173a692093a046f3 test: check `replaceable` mismatch error in `createrawtransaction` RPC (Sebastian Falbesoner)\n\nPull request description:\n\n  This PR adds missing test coverage for the createrawtransaction RPC, in the case that the `replaceable` parameter is set, but the passed transaction doesn't signal RBF (i.e. no input's nSequence is < 0xffffffe):\n  https://github.com/bitcoin/bitcoin/blob/1c7ef0abd11f35a27cc860ceb7e075b78f53cecf/src/rpc/rawtransaction_util.cpp#L135-L137\n\nACKs for top commit:\n  laanwj:\n    Code review ACK 1bace0cfeef35c4413769474173a692093a046f3\n  brunoerg:\n    crACK 1bace0cfeef35c4413769474173a692093a046f3\n  furszy:\n    Code review ACK 1bace0cf\n\nTree-SHA512: e6390401c8026c782643e3de7be56ea1745736b7e4c8886186d75c353c301b57afdabb631b9d8e2770386e4d7a59ac5fba1f380b9a5a21296512ca4515b35baa",
      "pushed_at": "2022-06-02T18:43:26Z"
    },
    {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2022-06-02T17:34:14Z"
      },
      "message": "Merge bitcoin-core/gui#583: Add translator comments to `TransactionDesc::FormatTxStatus`\n\n8cfb5627d51ecaa1d1e92ec21e2ac56a380c77e6 qt, refactor: add translator comments in `TransactionDesc::FormatTxStatus()` (w0xlt)\n\nPull request description:\n\n  This PR adds translator comments to `TransactionDesc::FormatTxStatus` as suggested in https://github.com/bitcoin-core/gui/pull/552#discussion_r812602741 and https://github.com/bitcoin-core/gui/pull/552#issuecomment-1097294710.\n\nACKs for top commit:\n  hebasto:\n    ACK 8cfb5627d51ecaa1d1e92ec21e2ac56a380c77e6\n\nTree-SHA512: 2c44b915e6309508f34fc22bb90e3d88ad32ed82fdb3a395f7c6716941edc1b311991140d28e838ad622a7484ed86aedd25e55674857fec8716d9575aed25fa0",
      "pushed_at": "2022-06-02T17:36:40Z"
    }
  ],
  "releases": [
    {
      "name": "Bitcoin Core 23.0",
      "published_at": "2022-04-25T14:17:32Z",
      "message": "Bitcoin Core version 23.0 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-23.0/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-23.0.md\r\n\r\nDo not use the links provided by GitHub, rather use the above download links, they are guaranteed to be generated deterministically and signed.",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 22.0",
      "published_at": "2021-09-14T11:32:48Z",
      "message": "Bitcoin Core version 22.0 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-22.0/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-22.0.md\r\n\r\nDo not use the links provided by GitHub, rather use the above download links, they are guaranteed to be generated deterministically and signed.",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.21.1",
      "published_at": "2021-05-03T01:33:04Z",
      "message": "Bitcoin Core version 0.21.1 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.21.1/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.21.1.md\r\n\r\nPreferably use the above download link, not the links provided by GitHub to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.\r\n",
      "author_username": "fanquake"
    },
    {
      "name": "Bitcoin Core 0.21.0",
      "published_at": "2021-01-15T19:52:11Z",
      "message": "Bitcoin Core version 0.21.0 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.21.0/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.21.0.md\r\n\r\nPreferably use the above download link, not the links provided by GitHub to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.20.1",
      "published_at": "2020-08-02T07:52:16Z",
      "message": "Bitcoin Core version 0.20.1 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.20.1/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.20.1.md\r\n\r\nPreferably use the above download link, not the links provided by GitHub to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.",
      "author_username": "MarcoFalke"
    },
    {
      "name": "Bitcoin Core 0.20.0",
      "published_at": "2020-06-03T11:28:21Z",
      "message": "Bitcoin Core version 0.20.0 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.20.0/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.20.0.md\r\n\r\nPreferably use the above download link, not the links provided by GitHub to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.19.1",
      "published_at": "2020-03-09T19:58:58Z",
      "message": "Bitcoin Core version 0.19.1 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.19.1/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.19.1.md\r\n\r\nPreferably use the above download link, not the links provided by GitHub to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.19.0.1",
      "published_at": "2019-11-24T13:26:31Z",
      "message": "Bitcoin Core version 0.19.0.1 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.19.0.1/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.19.0.1.md\r\n\r\nPreferably use the above download link, not the links provided by GitHub to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.\r\n",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.18.1",
      "published_at": "2019-08-09T18:53:34Z",
      "message": "Bitcoin Core version 0.18.1 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.18.1/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.18.1.md\r\n\r\nPreferably use the above download link, not the links provided by GitHub to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.\r\n",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.18.0",
      "published_at": "2019-05-18T18:22:20Z",
      "message": "Bitcoin Core version 0.18.0 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.18.0/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.18.0.md\r\n\r\nPreferably use the above download link, not the links provided by GitHub to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.\r\n",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.17.1",
      "published_at": "2018-12-25T09:36:21Z",
      "message": "Bitcoin Core version 0.17.1 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.17.1/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.17.1.md\r\n\r\nPreferably use the above download link, not the links provided by GitHub to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.\r\n",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.17.0.1",
      "published_at": "2018-11-06T08:34:16Z",
      "message": "Bitcoin Core version 0.17.0.1 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.17.0.1/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.17.0.1.md\r\n\r\nPreferably use the above download link, not the links provided by GitHub to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.\r\n",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.17.0",
      "published_at": "2018-10-03T09:22:37Z",
      "message": "Bitcoin Core version 0.17.0 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.17.0/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.17.0.md\r\n\r\nPreferably use the above download link, not the links provided by GitHub to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.\r\n",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.14.3",
      "published_at": "2018-09-28T15:29:44Z",
      "message": "Bitcoin Core version 0.14.3 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.14.3/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.14.3.md\r\n\r\nPreferably use the above download link, not the below links to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.\r\n",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.15.2",
      "published_at": "2018-09-28T15:30:19Z",
      "message": "Bitcoin Core version 0.15.2 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.15.2/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.15.2.md\r\n\r\nPreferably use the above download link, not the below links to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.\r\n",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.16.3",
      "published_at": "2018-09-18T21:14:45Z",
      "message": "Bitcoin Core version 0.16.3 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.16.3/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.16.3.md\r\n\r\nPreferably use the above download link, not the below links to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.\r\n",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.16.2",
      "published_at": "2018-07-29T17:04:40Z",
      "message": "Bitcoin Core version 0.16.2 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.16.2/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.16.2.md\r\n\r\nPreferably use the above download link, not the below links to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.\r\n",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.16.1",
      "published_at": "2018-06-15T16:35:36Z",
      "message": "Bitcoin Core version 0.16.1 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.16.1/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.16.1.md\r\n\r\nPreferably use the above download link, not the below links to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.\r\n",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.16.0",
      "published_at": "2018-02-26T11:59:39Z",
      "message": "Bitcoin Core version 0.16.0 is now available from:\r\n\r\nhttps://bitcoin.org/bin/bitcoin-core-0.16.0/\r\n\r\nand\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.16.0/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.16.0.md\r\n\r\nPreferably use the above download link, not the below links to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.15.1",
      "published_at": "2017-11-11T14:24:25Z",
      "message": "Bitcoin Core version 0.15.1 is now available from:\r\n\r\nhttps://bitcoin.org/bin/bitcoin-core-0.15.1/\r\n\r\nand\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.15.1/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.15.1.md\r\n\r\nPreferably use the above download link, not the below links to download the source tarball, as the release tarballs are generated deterministically and GitHub's are not.",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.15.0.1",
      "published_at": "2017-09-19T13:05:50Z",
      "message": "Bitcoin Core version 0.15.0.1 is now available from:\r\n\r\nhttps://bitcoin.org/bin/bitcoin-core-0.15.0.1/\r\n\r\nand\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.15.0.1/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.15.0.1.md\r\n\r\nPreferably use the above download link, not the below links to download the source tarball, as the release tarballs are generated deterministically and GitHub's are not.",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.15.0",
      "published_at": "2017-09-14T14:34:57Z",
      "message": "Bitcoin Core version 0.15.0 is now available from:\r\n\r\nhttps://bitcoin.org/bin/bitcoin-core-0.15.0/\r\n\r\nand\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.15.0/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.15.0.md\r\n\r\nPreferably use the above download link, not the below links to download the source tarball, as the release tarballs are generated deterministically and GitHubs's are not.",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core 0.14.2",
      "published_at": "2017-06-18T08:42:37Z",
      "message": "Bitcoin Core version 0.14.2 is now available from:\r\n\r\n  https://bitcoin.org/bin/bitcoin-core-0.14.2/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.14.2.md",
      "author_username": "MarcoFalke"
    },
    {
      "name": "Bitcoin Core 0.14.1",
      "published_at": "2017-04-22T14:19:24Z",
      "message": "Bitcoin Core version 0.14.1 is now available from:\r\n\r\n  https://bitcoin.org/bin/bitcoin-core-0.14.1/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.14.1.md",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core v0.14.0",
      "published_at": "2017-03-08T15:20:25Z",
      "message": "Bitcoin Core version 0.14.0 is now available from:\r\n\r\n  https://bitcoin.org/bin/bitcoin-core-0.14.0/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.14.0.md",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core v0.13.2",
      "published_at": "2017-01-03T10:48:14Z",
      "message": "Bitcoin Core version 0.13.2 is now available from:\n\n  https://bitcoin.org/bin/bitcoin-core-0.13.2/\n\nFor the release notes please see the git repository:\n\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.13.2.md\n",
      "author_username": "laanwj"
    },
    {
      "name": "Bitcoin Core v0.13.1",
      "published_at": "2016-11-01T19:23:04Z",
      "message": "Bitcoin Core version 0.13.1 is now available from:\n\n  https://bitcoin.org/bin/bitcoin-core-0.13.1/\n\nFor the release notes please see the git repository:\n\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.13.1.md\n",
      "author_username": "sipa"
    },
    {
      "name": "Bitcoin Core v0.13.0",
      "published_at": "2016-11-01T19:25:12Z",
      "message": "Bitcoin Core version 0.13.0 is now available from:\n\n  https://bitcoin.org/bin/bitcoin-core-0.13.0/\n\nFor the release notes please see the git repository:\n\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.13.0.md\n",
      "author_username": "sipa"
    },
    {
      "name": "Bitcoin Core v0.12.1",
      "published_at": "2016-11-01T19:25:45Z",
      "message": "Bitcoin Core version 0.12.1 is now available from:\n\n  https://bitcoin.org/bin/bitcoin-core-0.12.1/\n\nFor the release notes please see the git repository:\n\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.12.1.md\n",
      "author_username": "sipa"
    },
    {
      "name": "Bitcoin Core v0.12.0",
      "published_at": "2016-11-01T19:26:15Z",
      "message": "Bitcoin Core version 0.12.0 is now available from:\n\n  https://bitcoin.org/bin/bitcoin-core-0.12.0/\n\nFor the release notes please see the git repository:\n\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.12.0.md\n",
      "author_username": "sipa"
    }
  ],
  "issues": [
    {
      "title": "logging: add LogPrintfCategory to log unconditionally with category",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25306",
      "state": "open",
      "created_at": "2022-06-08T11:46:10Z",
      "closed_at": null,
      "comments": [],
      "labels": []
    },
    {
      "title": "refactor: Remove redundant addrman time checks",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25303",
      "state": "open",
      "created_at": "2022-06-08T07:16:01Z",
      "closed_at": null,
      "comments": [],
      "labels": [
        "Refactoring",
        "P2P"
      ]
    },
    {
      "title": "build: Check usages of #if defined(...)",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25302",
      "state": "open",
      "created_at": "2022-06-08T06:39:23Z",
      "closed_at": null,
      "comments": [
        {
          "user": "brokenprogrammer",
          "created_at": "2022-06-08T06:57:20Z",
          "author_association": "NONE",
          "body": "The linting failed because of `FAIL: subtree directory was touched without subtree merge`. I guess this is because I touched some external library code. Should I just revert the changes that affected secp256k1?"
        },
        {
          "user": "laanwj",
          "created_at": "2022-06-08T07:56:27Z",
          "author_association": "MEMBER",
          "body": "> The linting failed because of FAIL: subtree directory was touched without subtree merge. I guess this is because I touched some external library code. Should I just revert the changes that affected secp256k1?\r\n\r\nYes, it's not possible to make changes to subtrees through a PR in this repository, it needs to go through the appropriate upstream."
        },
        {
          "user": "brokenprogrammer",
          "created_at": "2022-06-08T08:22:54Z",
          "author_association": "NONE",
          "body": "> > The linting failed because of FAIL: subtree directory was touched without subtree merge. I guess this is because I touched some external library code. Should I just revert the changes that affected secp256k1?\r\n> \r\n> Yes, it's not possible to make changes to subtrees through a PR in this repository, it needs to go through the appropriate upstream.\r\n\r\nI see, thank you for the information. I have reverted the files for secp256k1."
        },
        {
          "user": "fanquake",
          "created_at": "2022-06-08T08:31:29Z",
          "author_association": "MEMBER",
          "body": "> I have reverted the files for secp256k1.\r\n\r\nYou need to remove the changes entirely, no reversion commits. You'll also need to write a proper / useful commit message for the actual change. I'd suggest reading through https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md."
        },
        {
          "user": "brokenprogrammer",
          "created_at": "2022-06-08T09:02:00Z",
          "author_association": "NONE",
          "body": "> > I have reverted the files for secp256k1.\r\n> \r\n> You need to remove the changes entirely, no reversion commits. You'll also need to write a proper / useful commit message for the actual change. I'd suggest reading through https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md.\r\n> \r\n\r\nSorry about that, I've published a new change which I hope corrects my mistakes."
        }
      ],
      "labels": [
        "Build system"
      ]
    },
    {
      "title": "doc: Correct comments re. units of constants",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25299",
      "state": "open",
      "created_at": "2022-06-07T22:13:35Z",
      "closed_at": null,
      "comments": [],
      "labels": [
        "Block storage"
      ]
    },
    {
      "title": "wallet: speedup transactions sync, rescan and load not flushing to db constantly",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25297",
      "state": "open",
      "created_at": "2022-06-07T18:55:49Z",
      "closed_at": null,
      "comments": [
        {
          "user": "DrahtBot",
          "created_at": "2022-06-08T01:02:10Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25272](https://github.com/bitcoin/bitcoin/pull/25272) (wallet: guard and alert about a wallet invalid state during chain sync by furszy)\n* [#24897](https://github.com/bitcoin/bitcoin/pull/24897) ([Draft / POC] Silent Payments by w0xlt)\n* [#22693](https://github.com/bitcoin/bitcoin/pull/22693) (RPC/Wallet: Add \"use_txids\" to output of getaddressinfo by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        }
      ],
      "labels": [
        "Wallet"
      ]
    },
    {
      "title": "Add DataStream without ser-type and ser-version and use it where possible",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25296",
      "state": "open",
      "created_at": "2022-06-07T17:37:29Z",
      "closed_at": null,
      "comments": [
        {
          "user": "DrahtBot",
          "created_at": "2022-06-08T01:04:49Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25284](https://github.com/bitcoin/bitcoin/pull/25284) ([WIP] consensus: Remove dependency on net (BIP 155 / ADDRV2_FORMAT) by MarcoFalke)\n* [#25227](https://github.com/bitcoin/bitcoin/pull/25227) (Handle invalid hex encoding in ParseHex by MarcoFalke)\n* [#25077](https://github.com/bitcoin/bitcoin/pull/25077) (Fix chain tip data race and corrupt rest response by MarcoFalke)\n* [#24914](https://github.com/bitcoin/bitcoin/pull/24914) (wallet: Load database records in a particular order by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        }
      ],
      "labels": [
        "Refactoring"
      ]
    },
    {
      "title": "Move DEFAULT_ANCESTOR_LIMIT to policy/settings",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25295",
      "state": "open",
      "created_at": "2022-06-07T15:18:05Z",
      "closed_at": null,
      "comments": [
        {
          "user": "DrahtBot",
          "created_at": "2022-06-08T01:07:23Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25290](https://github.com/bitcoin/bitcoin/pull/25290) ([kernel 3a/n] Decouple `CTxMemPool` from `ArgsManager` by dongcarl)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        }
      ],
      "labels": [
        "Mempool"
      ]
    },
    {
      "title": "test: Fix wait_for_debug_log UnicodeDecodeError",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25294",
      "state": "open",
      "created_at": "2022-06-07T14:53:09Z",
      "closed_at": null,
      "comments": [
        {
          "user": "jonatack",
          "created_at": "2022-06-08T12:22:40Z",
          "author_association": "MEMBER",
          "body": "ACK fa74b63c01db412f6a4378cb669d89496a89d02e"
        }
      ],
      "labels": [
        "Tests"
      ]
    },
    {
      "title": "logging: remove duplicate categories from LogPrint output",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25293",
      "state": "open",
      "created_at": "2022-06-07T14:13:16Z",
      "closed_at": null,
      "comments": [
        {
          "user": "jonatack",
          "created_at": "2022-06-07T14:30:18Z",
          "author_association": "MEMBER",
          "body": "Thanks for looking. I left this message unchanged in #25286, as it seems useful to understanding the message itself rather than just being a category prefix. Though others may see it as a duplicate category, I don't know."
        },
        {
          "user": "jonatack",
          "created_at": "2022-06-07T15:19:00Z",
          "author_association": "MEMBER",
          "body": "Yes, seems better now. Though, as I wrote above, I'm not sure this should be changed. Currently, the following would be logged, and without \"FeeEst:\" it may not be very clear.\r\n```\r\n[estimatefee] FeeEst: 5 > 60% decay 0.96200: feerate: 2326.67 from (2292.02 - 2925.26) 82.00% 16.3/(19.9 0 mem 0.0 out) Fail: (1979.93 - 2292.02) 56.56% 9.9/(17.3 0 mem 0.2 out)\r\n```\r\n\r\nHere are the ESTIMATEFEE logging messages:\r\n\r\n```\r\n$ git grep BCLog::ESTIMATEFEE\r\nsrc/policy/fees.cpp:376:    LogPrint(BCLog::ESTIMATEFEE, \"FeeEst: %d > %.0f%% decay %.5f: feerate: %g from (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\r\nsrc/policy/fees.cpp:457:    LogPrint(BCLog::ESTIMATEFEE, \"Reading estimates: %u buckets counting confirms up to %u blocks\\n\",\r\nsrc/policy/fees.cpp:476:        LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy error, blocks ago is negative for mempool tx\\n\");\r\nsrc/policy/fees.cpp:484:            LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy error, mempool tx removed from >25 blocks,bucketIndex=%u already\\n\",\r\nsrc/policy/fees.cpp:493:            LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy error, mempool tx removed from blockIndex=%u,bucketIndex=%u already\\n\",\r\nsrc/policy/fees.cpp:566:        LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy error mempool tx %s already being tracked\\n\",\r\nsrc/policy/fees.cpp:614:        LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy error Transaction had negative blocksToConfirm\\n\");\r\nsrc/policy/fees.cpp:664:        LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy first recorded height %u\\n\", firstRecordedHeight);\r\nsrc/policy/fees.cpp:668:    LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy estimates updated by %u of %u block txs, since last block %u of %u tracked, mempool map size %u, max target %u from %s\\n\",\r\nsrc/policy/fees.cpp:1014:    LogPrint(BCLog::ESTIMATEFEE, \"Recorded %u unconfirmed txs from mempool in %gs\\n\", num_entries, (endclear - startclear)*0.000001);\r\n```\r\n"
        }
      ],
      "labels": [
        "Refactoring",
        "TX fees and policy"
      ]
    },
    {
      "title": "test: Refactor rpc_fundrawtransaction.py",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25291",
      "state": "open",
      "created_at": "2022-06-07T10:44:12Z",
      "closed_at": null,
      "comments": [
        {
          "user": "DrahtBot",
          "created_at": "2022-06-08T01:15:08Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25183](https://github.com/bitcoin/bitcoin/pull/25183) (rpc: Segwit-only inputs option for fundrawtransaction by aureleoules)\n* [#24649](https://github.com/bitcoin/bitcoin/pull/24649) (wallet: do not count wallet utxos as external by S3RK)\n* [#23127](https://github.com/bitcoin/bitcoin/pull/23127) (tests: Use test framework utils where possible by vincenzopalazzo)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        }
      ],
      "labels": [
        "Tests"
      ]
    },
    {
      "title": "[kernel 3a/n] Decouple `CTxMemPool` from `ArgsManager`",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25290",
      "state": "open",
      "created_at": "2022-06-07T01:59:02Z",
      "closed_at": null,
      "comments": [
        {
          "user": "DrahtBot",
          "created_at": "2022-06-07T08:32:59Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25295](https://github.com/bitcoin/bitcoin/pull/25295) (Move DEFAULT_ANCESTOR_LIMIT to policy/settings by butterfly1924)\n* [#25285](https://github.com/bitcoin/bitcoin/pull/25285) (Add AutoFile without ser-type and ser-version and use it where possible by MarcoFalke)\n* [#25152](https://github.com/bitcoin/bitcoin/pull/25152) (refactor: Split util/system into exception, shell, and fs-specific files by Empact)\n* [#25077](https://github.com/bitcoin/bitcoin/pull/25077) (Fix chain tip data race and corrupt rest response by MarcoFalke)\n* [#25073](https://github.com/bitcoin/bitcoin/pull/25073) (test: Cleanup miner_tests by MarcoFalke)\n* [#24158](https://github.com/bitcoin/bitcoin/pull/24158) (Optimize Mempool Reorg logic using Epochs, improving memory usage and runtime. by JeremyRubin)\n* [#23962](https://github.com/bitcoin/bitcoin/pull/23962) (Use `int32_t` type for transaction size/weight consistently by hebasto)\n* [#13990](https://github.com/bitcoin/bitcoin/pull/13990) (Allow fee estimation to work with lower fees by ajtowns)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        }
      ],
      "labels": [
        "Refactoring"
      ]
    },
    {
      "title": "test: implement 'bech32m' mode for `getnewdestination()` helper",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25289",
      "state": "open",
      "created_at": "2022-06-07T00:13:17Z",
      "closed_at": null,
      "comments": [
        {
          "user": "DrahtBot",
          "created_at": "2022-06-07T08:38:43Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23127](https://github.com/bitcoin/bitcoin/pull/23127) (tests: Use test framework utils where possible by vincenzopalazzo)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        }
      ],
      "labels": [
        "Tests"
      ]
    },
    {
      "title": "logging: threshold log level",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25287",
      "state": "open",
      "created_at": "2022-06-06T17:01:08Z",
      "closed_at": null,
      "comments": [
        {
          "user": "jonatack",
          "created_at": "2022-06-06T17:12:23Z",
          "author_association": "MEMBER",
          "body": "Concept ACK. I'm glad to see a category-specific config option. These should probably be added to the logging RPC as well in a follow-up.  "
        },
        {
          "user": "DrahtBot",
          "created_at": "2022-06-07T08:49:18Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24950](https://github.com/bitcoin/bitcoin/pull/24950) (Add config option to set max debug log size by tehelsper)\n* [#23443](https://github.com/bitcoin/bitcoin/pull/23443) (p2p: Erlay support signaling by naumenkogs)\n* [#21603](https://github.com/bitcoin/bitcoin/pull/21603) (log: Mitigate disk filling attacks by rate limiting LogPrintf by dergoegge)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        }
      ],
      "labels": [
        "Tests",
        "Utils/log/libs"
      ]
    },
    {
      "title": "Add AutoFile without ser-type and ser-version and use it where possible",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25285",
      "state": "open",
      "created_at": "2022-06-06T16:04:53Z",
      "closed_at": null,
      "comments": [
        {
          "user": "laanwj",
          "created_at": "2022-06-06T16:36:20Z",
          "author_association": "MEMBER",
          "body": "Concept ACK"
        },
        {
          "user": "DrahtBot",
          "created_at": "2022-06-07T09:00:26Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25290](https://github.com/bitcoin/bitcoin/pull/25290) ([kernel 3a/n] Decouple `CTxMemPool` from `ArgsManager` by dongcarl)\n* [#25284](https://github.com/bitcoin/bitcoin/pull/25284) ([WIP] consensus: Remove dependency on net (BIP 155 / ADDRV2_FORMAT) by MarcoFalke)\n* [#13990](https://github.com/bitcoin/bitcoin/pull/13990) (Allow fee estimation to work with lower fees by ajtowns)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        },
        {
          "user": "MarcoFalke",
          "created_at": "2022-06-07T17:36:46Z",
          "author_association": "MEMBER",
          "body": "Rebased"
        }
      ],
      "labels": [
        "Refactoring"
      ]
    },
    {
      "title": "[WIP] consensus: Remove dependency on net (BIP 155 / ADDRV2_FORMAT)",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25284",
      "state": "open",
      "created_at": "2022-06-06T13:04:43Z",
      "closed_at": null,
      "comments": [
        {
          "user": "vasild",
          "created_at": "2022-06-06T13:44:20Z",
          "author_association": "CONTRIBUTOR",
          "body": "Concept ACK"
        },
        {
          "user": "DrahtBot",
          "created_at": "2022-06-07T09:06:14Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25296](https://github.com/bitcoin/bitcoin/pull/25296) (Add DataStream without ser-type and ser-version and use it where possible by MarcoFalke)\n* [#25285](https://github.com/bitcoin/bitcoin/pull/25285) (Add AutoFile without ser-type and ser-version and use it where possible by MarcoFalke)\n* [#24923](https://github.com/bitcoin/bitcoin/pull/24923) (Rework logging timer by MarcoFalke)\n* [#24170](https://github.com/bitcoin/bitcoin/pull/24170) (p2p, rpc: Manual block-relay-only connections with addnode by mzumsande)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        }
      ],
      "labels": [
        "Refactoring"
      ]
    },
    {
      "title": "Bugfix: configure: Define default for use_libevent",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25282",
      "state": "open",
      "created_at": "2022-06-05T21:49:40Z",
      "closed_at": null,
      "comments": [
        {
          "user": "DrahtBot",
          "created_at": "2022-06-06T07:03:00Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24291](https://github.com/bitcoin/bitcoin/pull/24291) (build: Remove negated --enable-fuzz checks from build system by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        },
        {
          "user": "DrahtBot",
          "created_at": "2022-06-07T11:53:58Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 1b2e1d179c5b350cac69ee670e01355314f25e11<br>(master) | commit e209e90d07da42d321632e16e8ac947e9d27ba5b<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`4bc97e47e1dea4be...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/SHA256SUMS.part) | [`2f0f06347373a97f...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/SHA256SUMS.part) |\n| *-aarch64-linux-gnu-debug.tar.gz | [`fa9cbc2d423fe0de...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-aarch64-linux-gnu-debug.tar.gz) | [`bc06b7f2056367e3...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-aarch64-linux-gnu-debug.tar.gz) |\n| *-aarch64-linux-gnu.tar.gz | [`841f287092c01910...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-aarch64-linux-gnu.tar.gz) | [`1cafbef4d92cae19...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-aarch64-linux-gnu.tar.gz) |\n| *-arm-linux-gnueabihf-debug.tar.gz | [`6eb49b30cce94afb...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-arm-linux-gnueabihf-debug.tar.gz) | [`881ba458a8ab0935...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-arm-linux-gnueabihf-debug.tar.gz) |\n| *-arm-linux-gnueabihf.tar.gz | [`a13364931c1a8407...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-arm-linux-gnueabihf.tar.gz) | [`fc1cd1aa14b9be3f...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-arm-linux-gnueabihf.tar.gz) |\n| *-arm64-apple-darwin-unsigned.dmg | [`2475d25eddf97d9f...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-arm64-apple-darwin-unsigned.dmg) | [`5685ecc2dd744d60...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-arm64-apple-darwin-unsigned.dmg) |\n| *-arm64-apple-darwin-unsigned.tar.gz | [`16afb63e0c71e9d0...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-arm64-apple-darwin-unsigned.tar.gz) | [`c63152db5ba10179...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-arm64-apple-darwin-unsigned.tar.gz) |\n| *-arm64-apple-darwin.tar.gz | [`22a645e368d96983...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-arm64-apple-darwin.tar.gz) | [`350e5cc4d46b1b83...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-arm64-apple-darwin.tar.gz) |\n| *-powerpc64-linux-gnu-debug.tar.gz | [`43e1f4225432d25a...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-powerpc64-linux-gnu-debug.tar.gz) | [`56cd870873e8af8a...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-powerpc64-linux-gnu-debug.tar.gz) |\n| *-powerpc64-linux-gnu.tar.gz | [`7328525e293caddb...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-powerpc64-linux-gnu.tar.gz) | [`72eb0973e1946da5...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-powerpc64-linux-gnu.tar.gz) |\n| *-powerpc64le-linux-gnu-debug.tar.gz | [`68b9874407df8f7d...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-powerpc64le-linux-gnu-debug.tar.gz) | [`a103f668653f6a25...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-powerpc64le-linux-gnu-debug.tar.gz) |\n| *-powerpc64le-linux-gnu.tar.gz | [`d97012f66f6a8845...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-powerpc64le-linux-gnu.tar.gz) | [`ff151a127be8c3c7...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-powerpc64le-linux-gnu.tar.gz) |\n| *-riscv64-linux-gnu-debug.tar.gz | [`1ccf9c3d2e0aee1c...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-riscv64-linux-gnu-debug.tar.gz) | [`24423275148e0421...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-riscv64-linux-gnu-debug.tar.gz) |\n| *-riscv64-linux-gnu.tar.gz | [`56a48599ff02b417...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-riscv64-linux-gnu.tar.gz) | [`b6fe878ff44000d7...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-riscv64-linux-gnu.tar.gz) |\n| *-win64-debug.zip | [`16849929ee509319...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-win64-debug.zip) | [`ebb2cf5f10daf610...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-win64-debug.zip) |\n| *-win64-setup-unsigned.exe | [`5e2e4b5ef77279ec...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-win64-setup-unsigned.exe) | [`7cd8f9e95b792af0...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-win64-setup-unsigned.exe) |\n| *-win64-unsigned.tar.gz | [`6e55a6dc34706d31...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-win64-unsigned.tar.gz) | [`9393b1defc96d542...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-win64-unsigned.tar.gz) |\n| *-win64.zip | [`60f546ef6cd8329a...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-win64.zip) | [`ceeaf842c032cda1...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-win64.zip) |\n| *-x86_64-apple-darwin-unsigned.dmg | [`81ca2142530b11ad...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-x86_64-apple-darwin-unsigned.dmg) | [`187214f0f3a2d29b...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-x86_64-apple-darwin-unsigned.dmg) |\n| *-x86_64-apple-darwin-unsigned.tar.gz | [`a5a3e64a7cfdd958...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-x86_64-apple-darwin-unsigned.tar.gz) | [`46068a5b514b8d84...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-x86_64-apple-darwin-unsigned.tar.gz) |\n| *-x86_64-apple-darwin.tar.gz | [`4fcebca1855ff650...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-x86_64-apple-darwin.tar.gz) | [`3e769b61e12c2398...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-x86_64-apple-darwin.tar.gz) |\n| *-x86_64-linux-gnu-debug.tar.gz | [`214e53be7b478552...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-x86_64-linux-gnu-debug.tar.gz) | [`215456892e9920f9...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-x86_64-linux-gnu-debug.tar.gz) |\n| *-x86_64-linux-gnu.tar.gz | [`5b2f1a84deb01e6a...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b-x86_64-linux-gnu.tar.gz) | [`6976c0a0e92a54ef...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da-x86_64-linux-gnu.tar.gz) |\n| *.tar.gz | [`68b41745a1ea1bc9...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/bitcoin-1b2e1d179c5b.tar.gz) | [`0a58c04e0aa1ffe9...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/bitcoin-e209e90d07da.tar.gz) |\n| guix_build.log | [`d2eda6c76d16eb90...`](https://drahtbot.space/guix/bitcoin/bitcoin/1b2e1d179c5b350cac69ee670e01355314f25e11/guix_build.log) | [`708cf74c5e26e438...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/guix_build.log) |\n| guix_build.log.diff |  | [`ca4021d6c39cb734...`](https://drahtbot.space/guix/bitcoin/bitcoin/e209e90d07da42d321632e16e8ac947e9d27ba5b/guix_build.log.diff) |\n\n"
        }
      ],
      "labels": [
        "Build system"
      ]
    },
    {
      "title": "build: Remove unused `LIBBITCOIN_KERNEL` variable",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25281",
      "state": "open",
      "created_at": "2022-06-05T19:45:32Z",
      "closed_at": null,
      "comments": [
        {
          "user": "laanwj",
          "created_at": "2022-06-07T14:05:00Z",
          "author_association": "MEMBER",
          "body": "Ping @dongcarl \r\n(it looks safe to remove, but also, there's no point in doing so if it needs to be re-added in the next bitcoinkernel PR)"
        },
        {
          "user": "fanquake",
          "created_at": "2022-06-07T17:05:31Z",
          "author_association": "MEMBER",
          "body": "Yes I think this is fine to just leave for now."
        }
      ],
      "labels": [
        "Build system"
      ]
    },
    {
      "title": "[refactor] use ITEMS macro to unify NetMsgType, allNetMessageTypes lists",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25275",
      "state": "open",
      "created_at": "2022-06-04T18:51:24Z",
      "closed_at": null,
      "comments": [
        {
          "user": "DrahtBot",
          "created_at": "2022-06-05T05:22:41Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23443](https://github.com/bitcoin/bitcoin/pull/23443) (p2p: Erlay support signaling by naumenkogs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        }
      ],
      "labels": [
        "P2P"
      ]
    },
    {
      "title": "[WIP] add free list to unordered map",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25274",
      "state": "open",
      "created_at": "2022-06-03T20:50:42Z",
      "closed_at": null,
      "comments": [
        {
          "user": "DrahtBot",
          "created_at": "2022-06-04T00:44:55Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17487](https://github.com/bitcoin/bitcoin/pull/17487) (coins: allow write to disk without cache drop by jamesob)\n* [#9384](https://github.com/bitcoin/bitcoin/pull/9384) (CCoinsViewCache code cleanup & deduplication by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        },
        {
          "user": "martinus",
          "created_at": "2022-06-04T06:03:12Z",
          "author_association": "CONTRIBUTOR",
          "body": "I'm not sure if that approach will be a net benefit. One of the main advantages of the allocator in #22702 is that not every node has to be malloced', saving the considerable memory overhead. I think the only way to get rid of the many `std::unordered_map` allocations is to use a custom allocator.\r\n\r\nAnother approach to hold on to the memory that should in theory do all what's done in #22702 is to just use `std::pmr::unsynchronized_pool_resource`: That memory resource has a pool which holds on to its memory until it is destroyed, exactly like my node_allocator. I don't know though how its implemented or what memory overhead individual allocations have. https://en.cppreference.com/w/cpp/memory/unsynchronized_pool_resource\r\n\r\nUsage would be relatively simple, like so:\r\n\r\n```cpp\r\nusing CCoinsMap = std::pmr::unordered_map<COutPoint, CCoinsCacheEntry, SaltedOutpointHasher>;\r\n\r\nauto options = std::pmr::pool_options();\r\noptions.largest_required_pool_block = 128; // TODO no idea what good values are\r\noptions.max_blocks_per_chunk = 262144 / options.largest_required_pool_block;  // TODO no idea what good values are\r\n\r\nauto mr = std::pmr::unsynchronized_pool_resource();\r\nauto map = CCoinsMap{0, SaltedOutpointHasher{}, std::equal_to<COutPoint>{}, &mr};\r\n```\r\n\r\nI did some rudimentary benchmarking with this, but this seemed to be even slower than a plain `std::unordered_map` so I didn't follow this more closely."
        }
      ],
      "labels": [
        "UTXO Db and Indexes"
      ]
    },
    {
      "title": "wallet: Pass through transaction locktime and preset input sequences and scripts to CreateTransaction",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25273",
      "state": "open",
      "created_at": "2022-06-03T18:58:15Z",
      "closed_at": null,
      "comments": [
        {
          "user": "DrahtBot",
          "created_at": "2022-06-04T00:47:56Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25218](https://github.com/bitcoin/bitcoin/pull/25218) (refactor: introduce generic 'Result' classes and connect them to CreateTransaction and GetNewDestination by furszy)\n* [#25118](https://github.com/bitcoin/bitcoin/pull/25118) (wallet: unify \u201callow/block other inputs\u201c concept by furszy)\n* [#24897](https://github.com/bitcoin/bitcoin/pull/24897) ([Draft / POC] Silent Payments by w0xlt)\n* [#24649](https://github.com/bitcoin/bitcoin/pull/24649) (wallet: do not count wallet utxos as external by S3RK)\n* [#24128](https://github.com/bitcoin/bitcoin/pull/24128) (wallet: BIP 326 sequence based anti-fee-snipe for taproot inputs by MarcoFalke)\n* [#23475](https://github.com/bitcoin/bitcoin/pull/23475) (wallet: add config to prioritize a solution that doesn't create change in coin selection by brunoerg)\n* [#21283](https://github.com/bitcoin/bitcoin/pull/21283) (Implement BIP 370 PSBTv2 by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        }
      ],
      "labels": [
        "Wallet",
        "RPC/REST/ZMQ"
      ]
    },
    {
      "title": "wallet: guard and alert about a wallet invalid state during chain sync",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25272",
      "state": "open",
      "created_at": "2022-06-03T14:06:15Z",
      "closed_at": null,
      "comments": [
        {
          "user": "furszy",
          "created_at": "2022-06-03T15:53:26Z",
          "author_association": "CONTRIBUTOR",
          "body": "Update:\r\nAdded test coverage for it in the first commit. Showing how the wallet can end up in the invalid state. The second commit corrects it with the proposed solution."
        },
        {
          "user": "DrahtBot",
          "created_at": "2022-06-04T15:58:07Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25297](https://github.com/bitcoin/bitcoin/pull/25297) (wallet: speedup transactions sync, rescan and load not flushing to db constantly by furszy)\n* [#24897](https://github.com/bitcoin/bitcoin/pull/24897) ([Draft / POC] Silent Payments by w0xlt)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        },
        {
          "user": "jonatack",
          "created_at": "2022-06-06T15:11:53Z",
          "author_association": "MEMBER",
          "body": "Concept ACK"
        },
        {
          "user": "furszy",
          "created_at": "2022-06-06T19:31:29Z",
          "author_association": "CONTRIBUTOR",
          "body": "Thanks for the feedback!\r\n\r\nApplied the following changes:\r\n\r\n1) Moved `dynamic_cast` to `static_cast`.\r\n2) Set same default value for \"m_pass\" field in both classes `FailDatabase` and `FailBatch`.\r\n3) Shorted the commit subject."
        }
      ],
      "labels": [
        "Wallet"
      ]
    },
    {
      "title": "Allow groups of accounts to access the RPC cookie file",
      "pull_request": null,
      "state": "open",
      "created_at": "2022-06-02T23:44:41Z",
      "closed_at": null,
      "comments": [
        {
          "user": "1440000bytes",
          "created_at": "2022-06-03T02:12:34Z",
          "author_association": "CONTRIBUTOR",
          "body": "Have you tried RPC whitelists? https://github.com/bitcoin/bitcoin/pull/12763"
        },
        {
          "user": "alevchuk",
          "created_at": "2022-06-03T05:07:54Z",
          "author_association": "NONE",
          "body": "> Have you tried RPC whitelists? #12763\r\n\r\nWhitelists use rpcauth which sends the password in clear text to the server https://github.com/bitcoin/bitcoin/blob/0de36941eca1bff91420dd878eb097db2b1a596c/src/httprpc.cpp#L130\r\n\r\nThis unlike the cookie file is not resilient to [server spoofing attack](https://github.com/Kixunil/security_writings/blob/master/cookie_files.md). Basically if my grafana Linux user gets compromised then it can get the password for every bitcoin RPC user. \r\n\r\n\r\nIn my case both RPC users have a wide variety of methods that need to be available, so locking down with rpc whitelists would not help much. I would not choose that over keeping random users out.  \r\n\r\n\r\n"
        },
        {
          "user": "ryanofsky",
          "created_at": "2022-06-03T17:12:11Z",
          "author_association": "CONTRIBUTOR",
          "body": "Agree it would be useful to set permissions on the cookie file, and this would be a simple feature to implement. But I don't think it would be right to say rpcauth is less secure than cookie auth.\r\n\r\nThe main advantage cookies have over RPC passwords is just their convenience. Other than being generated randomly each restart, they don't provide extra security. You could write a script to randomly generate new passwords for grafana each time bitcoin is restarted to get the same effect as using a cookie.\r\n\r\nRPC passwords also have an advantage over cookies because they are hashed. So if an attacker manages to get read access to the bitcoin directory, they can't easily use password hashes to connect to the server, while they could straightforwardly use the cookie file to connect.\r\n\r\nAlso it looks like depending on your setup you may be able control permissions of the cookie file in current versions of bitcoind by running `umask 0027` and passing `-sysperms` argument."
        },
        {
          "user": "darosior",
          "created_at": "2022-06-06T12:25:31Z",
          "author_association": "MEMBER",
          "body": "I agree this would be nice to have. I personally use ACLs to achieve the same."
        }
      ],
      "labels": [
        "Feature"
      ]
    },
    {
      "title": "wallet: re-activate the not triggered  \"AmountWithFeeExceedsBalance\" error",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25269",
      "state": "open",
      "created_at": "2022-06-02T14:17:15Z",
      "closed_at": null,
      "comments": [
        {
          "user": "DrahtBot",
          "created_at": "2022-06-02T16:36:51Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25218](https://github.com/bitcoin/bitcoin/pull/25218) (refactor: introduce generic 'Result' classes and connect them to CreateTransaction and GetNewDestination by furszy)\n* [#25183](https://github.com/bitcoin/bitcoin/pull/25183) (rpc: Segwit-only inputs option for fundrawtransaction by aureleoules)\n* [#25118](https://github.com/bitcoin/bitcoin/pull/25118) (wallet: unify \u201callow/block other inputs\u201c concept by furszy)\n* [#25005](https://github.com/bitcoin/bitcoin/pull/25005) (wallet: remove extra wtx lookup in 'AvailableCoins' + several code cleanups. by furszy)\n* [#24699](https://github.com/bitcoin/bitcoin/pull/24699) (wallet: Improve AvailableCoins performance by reducing duplicated operations by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        }
      ],
      "labels": [
        "Wallet"
      ]
    },
    {
      "title": "refactor: Introduce EvictionManager",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25268",
      "state": "open",
      "created_at": "2022-06-02T12:34:15Z",
      "closed_at": null,
      "comments": [
        {
          "user": "DrahtBot",
          "created_at": "2022-06-02T16:39:54Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25174](https://github.com/bitcoin/bitcoin/pull/25174) (net/net_processing: Add thread safety related annotations for CNode and Peer by ajtowns)\n* [#24970](https://github.com/bitcoin/bitcoin/pull/24970) (net processing: Move cleanSubVer, fPreferredDownload and nLocalHostNonce to Peer by jnewbery)\n* [#24170](https://github.com/bitcoin/bitcoin/pull/24170) (p2p, rpc: Manual block-relay-only connections with addnode by mzumsande)\n* [#23443](https://github.com/bitcoin/bitcoin/pull/23443) (p2p: Erlay support signaling by naumenkogs)\n* [#21878](https://github.com/bitcoin/bitcoin/pull/21878) (Make all networking code mockable by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        },
        {
          "user": "jnewbery",
          "created_at": "2022-06-03T10:20:43Z",
          "author_association": "MEMBER",
          "body": "Concept ACK. Very nice!"
        },
        {
          "user": "theuni",
          "created_at": "2022-06-07T21:18:00Z",
          "author_association": "MEMBER",
          "body": "Concept ACK!"
        }
      ],
      "labels": [
        "Refactoring"
      ]
    },
    {
      "title": "Setting torcontrol overrides proxy address",
      "pull_request": null,
      "state": "open",
      "created_at": "2022-06-01T23:28:24Z",
      "closed_at": null,
      "comments": [],
      "labels": [
        "Bug"
      ]
    },
    {
      "title": "build: pass minisketch cppflags only where needed",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25263",
      "state": "open",
      "created_at": "2022-06-01T15:13:22Z",
      "closed_at": null,
      "comments": [],
      "labels": [
        "Build system"
      ]
    },
    {
      "title": "rpc: fetch multiple headers in getblockheader()",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25261",
      "state": "open",
      "created_at": "2022-06-01T14:02:56Z",
      "closed_at": null,
      "comments": [
        {
          "user": "MarcoFalke",
          "created_at": "2022-06-01T15:57:36Z",
          "author_association": "MEMBER",
          "body": "Please squash your commits according to https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits"
        },
        {
          "user": "JeremyRubin",
          "created_at": "2022-06-01T18:02:50Z",
          "author_association": "CONTRIBUTOR",
          "body": "I think it makes sense to do count = 0 as a single entity, and >= 1 as an array, or otherwise make an additional as_array bool param to control the output type.\r\n\r\nOtherwise the \"type instability\" is difficult to deal with for downstream consumers of the API. E.g., consider the code for https://docs.rs/bitcoincore-rpc/latest/src/bitcoincore_rpc/client.rs.html#337-341 ."
        },
        {
          "user": "natanleung",
          "created_at": "2022-06-01T18:54:32Z",
          "author_association": "NONE",
          "body": "> I think it makes sense to do count = 0 as a single entity, and >= 1 as an array, or otherwise make an additional as_array bool param to control the output type.\r\n> \r\n> Otherwise the \"type instability\" is difficult to deal with for downstream consumers of the API. E.g., consider the code for https://docs.rs/bitcoincore-rpc/latest/src/bitcoincore_rpc/client.rs.html#337-341 .\r\n\r\nThanks for the reply. Note that there is no regression impact because all preexisting functionality is intact. Ultimately, it is an optional parameter which can be ignored.\r\n\r\nTo me, `count = 0` is a bit counterintuitive. And as mentioned above, the REST call also interprets `count = 0` as invalid, assuming we are aiming to emulate an improved version of the REST functionality in RPC.\r\n\r\nFrom the old PR, it would appear that we are tending away from the unformatted (concatenated) output in new implementation. If this is indeed the case, then such an additional parameter does not make seem useful.\r\n\r\n@MarcoFalke Do you have any input on this? And are any further updates to the PR needed at this point? All CI checks have passed. Thanks."
        },
        {
          "user": "MarcoFalke",
          "created_at": "2022-06-01T18:57:20Z",
          "author_association": "MEMBER",
          "body": "What about:\r\n\r\n* null -> \"flat\" reply\r\n* int -> array reply"
        },
        {
          "user": "natanleung",
          "created_at": "2022-06-01T19:39:02Z",
          "author_association": "NONE",
          "body": "> What about:\r\n> \r\n> * null -> \"flat\" reply\r\n> * int -> array reply\r\n\r\n@JeremyRubin's suggestion has been implemented. I think I misunderstood the difference between `count = 0` and `count = 1` in terms of the \"type instability\". It makes sense to me now.\r\n\r\nAs you've denoted, this is now resolved such that:\r\n`count = 0` -> \"flat\" reply\r\n`count > 0` -> array reply\r\n\r\nLet me know if any other changes are still needed. Thanks."
        },
        {
          "user": "JeremyRubin",
          "created_at": "2022-06-01T20:34:20Z",
          "author_association": "CONTRIBUTOR",
          "body": "Yeah that makes sense. Null = flat works too. Idea isn't to concatenate anything, but rather to provide support for legacy behavior and something that matches the REST API. Since 0 is invalid in rest, all valid queries in JSON will match all valid rest queries, and legacy count=0 queries will return flat.\r\n\r\nIf we were to do a breaking API change, i'd say *always* return array :)"
        },
        {
          "user": "natanleung",
          "created_at": "2022-06-03T04:45:11Z",
          "author_association": "NONE",
          "body": "@MarcoFalke I believe that we have finalized the design. I have also updated the description. Let me know if there is anything else that is needed for this PR. Thanks."
        }
      ],
      "labels": [
        "RPC/REST/ZMQ"
      ]
    },
    {
      "title": "Parallel compact block download",
      "pull_request": null,
      "state": "open",
      "created_at": "2022-05-31T21:08:24Z",
      "closed_at": null,
      "comments": [],
      "labels": [
        "Feature"
      ]
    },
    {
      "title": "Consolidate Windows ASLR workarounds for upstream secp256k1 changes",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25251",
      "state": "open",
      "created_at": "2022-05-30T19:18:06Z",
      "closed_at": null,
      "comments": [
        {
          "user": "hebasto",
          "created_at": "2022-05-30T19:25:22Z",
          "author_association": "MEMBER",
          "body": "Maybe the oldest `binutils` used for cross-compiling [do not require](https://github.com/bitcoin/bitcoin/pull/23360#issuecomment-952562953) any ASLR workarounds?"
        },
        {
          "user": "fanquake",
          "created_at": "2022-05-30T19:30:39Z",
          "author_association": "MEMBER",
          "body": "> Maybe the oldest binutils used for cross-compiling https://github.com/bitcoin/bitcoin/pull/23360#issuecomment-952562953 any ASLR workarounds?\r\n\r\nI've outlined in the commits which versions of binutils are affected by the bug, and that includes, for example, the version shipped with Ubuntu Focal, which is almost certainly still used to cross-compile WIndows binaries. The comment you've linked too, says to update the doc to mention that version that includes the fix, which has been done here."
        },
        {
          "user": "hebasto",
          "created_at": "2022-05-30T19:32:59Z",
          "author_association": "MEMBER",
          "body": "Concept ACK."
        },
        {
          "user": "laanwj",
          "created_at": "2022-05-31T07:11:01Z",
          "author_association": "MEMBER",
          "body": "Concept ACK\r\n\r\nThis is more elegant. Exporting only the entry point makes much more sense than exporting secp256k1 symbols. Although it can't hurt (no one dynloads a binary, i'd hope!), it could be a risk for shared libraries where the symbols could interfere.\r\n\r\nEdit:\r\n\r\n> Although it can't hurt (no one dynloads a binary, i'd hope!)\r\n\r\nWait, I'm wrong here. It could hurt, if we dynamically link against libraries that (directly or indirectly) use another version of secp256k1. I remember we had a problem like this with OpenSSL a long time ago where our statically linked version of OpenSSL conflicted with the one Qt was using. It's quite an edge case though :smile:  But it's always better to err on the safe side, I mean."
        },
        {
          "user": "fanquake",
          "created_at": "2022-05-31T07:47:34Z",
          "author_association": "MEMBER",
          "body": "cc also @real-or-random @jonasnick "
        },
        {
          "user": "theuni",
          "created_at": "2022-05-31T13:40:49Z",
          "author_association": "MEMBER",
          "body": "ACK with or without the [suggestion here](https://github.com/bitcoin/bitcoin/pull/25251#discussion_r885277583)."
        },
        {
          "user": "theuni",
          "created_at": "2022-05-31T13:43:35Z",
          "author_association": "MEMBER",
          "body": "\r\n> Wait, I'm wrong here. It could hurt, if we dynamically link against libraries that (directly or indirectly) use another version of secp256k1. I remember we had a problem like this with OpenSSL a long time ago where our statically linked version of OpenSSL conflicted with the one Qt was using. It's quite an edge case though \ud83d\ude04 But it's always better to err on the safe side, I mean.\r\n\r\nThanks so much for this reminder, I had forgotten about this edge case! Very helpful to keep in mind."
        },
        {
          "user": "DrahtBot",
          "created_at": "2022-06-02T12:44:38Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9<br>(master) | commit f37b9af9646c15277257c5ac089bf648661f8bb6<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`48da0fae4f3c828d...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/SHA256SUMS.part) | [`70479e95e6f3b20e...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/SHA256SUMS.part) |\n| *-aarch64-linux-gnu-debug.tar.gz | [`c05d18eb70d358f2...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-aarch64-linux-gnu-debug.tar.gz) | [`08939403fb4691a1...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-aarch64-linux-gnu-debug.tar.gz) |\n| *-aarch64-linux-gnu.tar.gz | [`0194c2ddbba2e739...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-aarch64-linux-gnu.tar.gz) | [`3ebff07596d4c6d7...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-aarch64-linux-gnu.tar.gz) |\n| *-arm-linux-gnueabihf-debug.tar.gz | [`849bd24df6cf4bc1...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-arm-linux-gnueabihf-debug.tar.gz) | [`74b23e24601531df...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-arm-linux-gnueabihf-debug.tar.gz) |\n| *-arm-linux-gnueabihf.tar.gz | [`c4e68fae5594ba3a...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-arm-linux-gnueabihf.tar.gz) | [`cbe3285b4d34aae4...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-arm-linux-gnueabihf.tar.gz) |\n| *-arm64-apple-darwin-unsigned.dmg | [`c9a2bc0f65b20bae...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-arm64-apple-darwin-unsigned.dmg) | [`7d4937ae4fe1417d...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-arm64-apple-darwin-unsigned.dmg) |\n| *-arm64-apple-darwin-unsigned.tar.gz | [`a8fedf69253c2295...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-arm64-apple-darwin-unsigned.tar.gz) | [`77c7f2934488ca28...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-arm64-apple-darwin-unsigned.tar.gz) |\n| *-arm64-apple-darwin.tar.gz | [`f948368bf3f9a49d...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-arm64-apple-darwin.tar.gz) | [`7af293a446285c41...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-arm64-apple-darwin.tar.gz) |\n| *-powerpc64-linux-gnu-debug.tar.gz | [`fbc766009041f2c6...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-powerpc64-linux-gnu-debug.tar.gz) | [`b905fef776ccb0f8...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-powerpc64-linux-gnu-debug.tar.gz) |\n| *-powerpc64-linux-gnu.tar.gz | [`1d2b389ecae24861...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-powerpc64-linux-gnu.tar.gz) | [`a6a4ca404a3001fc...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-powerpc64-linux-gnu.tar.gz) |\n| *-powerpc64le-linux-gnu-debug.tar.gz | [`e78a4d47f8dbffec...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-powerpc64le-linux-gnu-debug.tar.gz) | [`6b1eb2e875de34d5...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-powerpc64le-linux-gnu-debug.tar.gz) |\n| *-powerpc64le-linux-gnu.tar.gz | [`5ab6c4a6f99988e7...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-powerpc64le-linux-gnu.tar.gz) | [`0744d171fd5a6224...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-powerpc64le-linux-gnu.tar.gz) |\n| *-riscv64-linux-gnu-debug.tar.gz | [`68e49fd2dfdbe98b...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-riscv64-linux-gnu-debug.tar.gz) | [`9c19f76c2d7a3fb8...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-riscv64-linux-gnu-debug.tar.gz) |\n| *-riscv64-linux-gnu.tar.gz | [`173139662bd4331e...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-riscv64-linux-gnu.tar.gz) | [`0755081d8bb62909...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-riscv64-linux-gnu.tar.gz) |\n| *-win64-debug.zip | [`270501950de1c55e...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-win64-debug.zip) | [`9a1e6da8c0fb1623...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-win64-debug.zip) |\n| *-win64-setup-unsigned.exe | [`21839223fa33e86f...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-win64-setup-unsigned.exe) | [`32cda3faeaf4d2f6...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-win64-setup-unsigned.exe) |\n| *-win64-unsigned.tar.gz | [`aeeabbb72b47c843...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-win64-unsigned.tar.gz) | [`385f6009a3e3b35c...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-win64-unsigned.tar.gz) |\n| *-win64.zip | [`6c8ac0a41980c34a...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-win64.zip) | [`a1cbbefddabf8a84...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-win64.zip) |\n| *-x86_64-apple-darwin-unsigned.dmg | [`890caf48cb5f2710...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-x86_64-apple-darwin-unsigned.dmg) | [`78b52e782cf5d4cc...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-x86_64-apple-darwin-unsigned.dmg) |\n| *-x86_64-apple-darwin-unsigned.tar.gz | [`df51da5073165fb0...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-x86_64-apple-darwin-unsigned.tar.gz) | [`371a02ebc90425b2...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-x86_64-apple-darwin-unsigned.tar.gz) |\n| *-x86_64-apple-darwin.tar.gz | [`3c9b643d7f4a6ac5...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-x86_64-apple-darwin.tar.gz) | [`b843c49fffde7ed0...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-x86_64-apple-darwin.tar.gz) |\n| *-x86_64-linux-gnu-debug.tar.gz | [`e9f5d54fa3f1941b...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-x86_64-linux-gnu-debug.tar.gz) | [`3b50b3fdf46dcf19...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-x86_64-linux-gnu-debug.tar.gz) |\n| *-x86_64-linux-gnu.tar.gz | [`543dce95f9a0b243...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c-x86_64-linux-gnu.tar.gz) | [`91e165b95a998da2...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c-x86_64-linux-gnu.tar.gz) |\n| *.tar.gz | [`a2f9f253d3373fda...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/bitcoin-5f65afff9c4c.tar.gz) | [`0bea692881f30f14...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/bitcoin-f37b9af9646c.tar.gz) |\n| guix_build.log | [`b2bbb782674ee4ee...`](https://drahtbot.space/guix/bitcoin/bitcoin/5f65afff9c4c735d607a69fc3d18b4ecadbf3ba9/guix_build.log) | [`563fb647a42c0175...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/guix_build.log) |\n| guix_build.log.diff |  | [`08ef072b38bb0ad3...`](https://drahtbot.space/guix/bitcoin/bitcoin/f37b9af9646c15277257c5ac089bf648661f8bb6/guix_build.log.diff) |\n\n"
        }
      ],
      "labels": [
        "Windows",
        "Upstream",
        "Waiting for author"
      ]
    },
    {
      "title": "refactor: Add LIFETIMEBOUND / -Wdangling-gsl to Assert()",
      "pull_request": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25248",
      "state": "open",
      "created_at": "2022-05-30T14:29:20Z",
      "closed_at": null,
      "comments": [
        {
          "user": "jonatack",
          "created_at": "2022-05-30T14:33:01Z",
          "author_association": "MEMBER",
          "body": "Concept ACK"
        },
        {
          "user": "DrahtBot",
          "created_at": "2022-05-31T04:29:11Z",
          "author_association": "CONTRIBUTOR",
          "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25112](https://github.com/bitcoin/bitcoin/pull/25112) (util: Move error message formatting of NonFatalCheckError to cpp by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first."
        }
      ],
      "labels": [
        "Refactoring",
        "Utils/log/libs"
      ]
    }
  ],
  "pulls": [
    {
      "created_at": "2022-06-08T11:46:10Z",
      "updated_at": "2022-06-08T12:05:08Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "MEMBER"
    },
    {
      "created_at": "2022-06-08T07:16:01Z",
      "updated_at": "2022-06-08T12:06:25Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "MEMBER"
    },
    {
      "created_at": "2022-06-08T06:39:23Z",
      "updated_at": "2022-06-08T09:11:15Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "NONE"
    },
    {
      "created_at": "2022-06-07T22:13:35Z",
      "updated_at": "2022-06-08T05:52:54Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "MEMBER"
    },
    {
      "created_at": "2022-06-07T18:55:49Z",
      "updated_at": "2022-06-08T01:50:18Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "CONTRIBUTOR"
    },
    {
      "created_at": "2022-06-07T17:37:29Z",
      "updated_at": "2022-06-08T01:04:49Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "MEMBER"
    },
    {
      "created_at": "2022-06-07T15:18:05Z",
      "updated_at": "2022-06-08T01:07:23Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "NONE"
    },
    {
      "created_at": "2022-06-07T14:53:09Z",
      "updated_at": "2022-06-08T12:22:40Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "MEMBER"
    },
    {
      "created_at": "2022-06-07T14:13:16Z",
      "updated_at": "2022-06-07T15:56:18Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "NONE"
    },
    {
      "created_at": "2022-06-07T10:44:12Z",
      "updated_at": "2022-06-08T01:15:09Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "CONTRIBUTOR"
    },
    {
      "created_at": "2022-06-07T01:59:02Z",
      "updated_at": "2022-06-08T01:17:43Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "CONTRIBUTOR"
    },
    {
      "created_at": "2022-06-07T00:13:17Z",
      "updated_at": "2022-06-07T13:56:47Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "CONTRIBUTOR"
    },
    {
      "created_at": "2022-06-06T17:01:08Z",
      "updated_at": "2022-06-07T12:43:27Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "CONTRIBUTOR"
    },
    {
      "created_at": "2022-06-06T16:04:53Z",
      "updated_at": "2022-06-08T01:25:26Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "MEMBER"
    },
    {
      "created_at": "2022-06-06T13:04:43Z",
      "updated_at": "2022-06-08T01:28:01Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "MEMBER"
    },
    {
      "created_at": "2022-06-05T21:49:40Z",
      "updated_at": "2022-06-07T11:53:58Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "MEMBER"
    },
    {
      "created_at": "2022-06-05T19:45:32Z",
      "updated_at": "2022-06-07T17:05:31Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "MEMBER"
    },
    {
      "created_at": "2022-06-04T18:51:24Z",
      "updated_at": "2022-06-05T05:22:41Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "CONTRIBUTOR"
    },
    {
      "created_at": "2022-06-03T20:50:42Z",
      "updated_at": "2022-06-04T06:03:36Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "CONTRIBUTOR"
    },
    {
      "created_at": "2022-06-03T18:58:15Z",
      "updated_at": "2022-06-04T15:55:40Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "MEMBER"
    },
    {
      "created_at": "2022-06-03T14:06:15Z",
      "updated_at": "2022-06-08T01:43:34Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "CONTRIBUTOR"
    },
    {
      "created_at": "2022-06-02T14:17:15Z",
      "updated_at": "2022-06-03T08:59:33Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "CONTRIBUTOR"
    },
    {
      "created_at": "2022-06-02T12:34:15Z",
      "updated_at": "2022-06-08T01:48:54Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "MEMBER"
    },
    {
      "created_at": "2022-06-01T15:13:22Z",
      "updated_at": "2022-06-01T15:13:22Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "MEMBER"
    },
    {
      "created_at": "2022-06-01T14:02:56Z",
      "updated_at": "2022-06-03T04:45:11Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "NONE"
    },
    {
      "created_at": "2022-05-30T19:18:06Z",
      "updated_at": "2022-06-08T09:50:12Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "MEMBER"
    },
    {
      "created_at": "2022-05-30T14:29:20Z",
      "updated_at": "2022-05-31T04:29:11Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "MEMBER"
    },
    {
      "created_at": "2022-05-30T09:33:05Z",
      "updated_at": "2022-06-07T13:07:27Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "CONTRIBUTOR"
    },
    {
      "created_at": "2022-05-28T19:00:52Z",
      "updated_at": "2022-06-06T19:08:54Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "CONTRIBUTOR"
    },
    {
      "created_at": "2022-05-28T14:19:40Z",
      "updated_at": "2022-06-05T18:56:53Z",
      "closed_at": null,
      "merged_at": null,
      "state": "open",
      "author_association": "CONTRIBUTOR"
    }
  ],
  "dependent_repos": 0,
  "dependent_packages": 0
}